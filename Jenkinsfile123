pipeline {
    agent any
    
    tools {
        
        maven 'maven3'
        jdk 'jdk17'
        
    }
            
    environment {
        SCANNER_HOME=tool 'sonar-scanner'
    }
    stages {
        stage('gitcheckout') {
            steps {
                git branch: 'main', url: 'https://github.com/shehmil/Ekart.git'
            }
        }
        
        stage('compile') {
            steps {
            sh "mvn compile"
            
            }
        }
        
        stage('unittest ') {
            steps {
                sh "mvn test -DskipTests=true"
            }
        }
        
        stage('sonarqube') {
            steps {
               withSonarQubeEnv('sonar') 
               {
                   
                  sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=EKART  -Dsonar.projectKey=EKART \
                           -Dsonar.java.binaries=.   '''
                    
                   
                   

            }
        }
        }
        
       stage('Depentency check') {
          steps {
              dependencyCheck additionalArguments: '--scan ./', odcInstallation: 'DC'
              dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
                
                
                 
           }
      }
        
        
        stage('build mvn') {
            steps {
               sh "mvn clean package -DskipTests=true" 
            }
        }
        
        
        stage('artifact to nexus') {
            steps {
                withMaven(globalMavenSettingsConfig: 'global-maven', jdk: 'jdk17', maven: 'maven3', mavenSettingsConfig: '', traceability: true) {
               
               sh "mvn deploy -DskipTests=true" 
}
            }
        }
        
        
         stage('docker build ') {
            steps {
                script{
                 withDockerRegistry(credentialsId: 'dockerusername-passwd', toolName: 'docker') {

                sh "docker build -t  shehmil/ekart:latest -f docker/Dockerfile ."    
        }
            }
            }
         }
        
        
        
              stage('trivy scan') {
            steps {
            sh "trivy image shehmil/ekart:latest > trivysc.txt "
            
            }
      
              }
         stage('dockerimg   push') {
            steps {
                script{
                 withDockerRegistry(credentialsId: 'dockerusername-passwd', toolName: 'docker') {

                sh "docker push shehmil/ekart:latest "    
        }
            }
        }
        
      }
               
        
    }
    }
